(undo-tree-save-format-version . 1)
"8bd80803e495fdd91fb8db3bb803a444c25b7caa"
[nil nil nil nil (25772 52539 246779 53000) 0 nil]
([nil nil ((549 . 564) (545 . 549) (#("t" 0 1 (fontified t)) . -545) (undo-tree-id1 . -1) (#("e" 0 1 (fontified t)) . -546) (undo-tree-id2 . -1) (#("a" 0 1 (fontified t)) . -547) (undo-tree-id3 . -1) 548 (545 . 548) (#("a" 0 1 (fontified t)) . -545) (undo-tree-id4 . -1) 546 (538 . 546) (537 . 539) (536 . 537) (t 25772 25768 850915 105000) 501) nil (25772 52539 246777 825000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -560) (undo-tree-id0 . -1) 561) nil (25772 52539 246772 267000) 0 nil])
([nil nil ((29 . 36) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -29) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -30) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -31) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) 32 (29 . 32) (#("b" 0 1 (face font-lock-comment-face fontified t)) . -29) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -30) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) 31 (30 . 31) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -30) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -31) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -32) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("c" 0 1 (face font-lock-comment-face fontified t)) . -33) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -34) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -35) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -36) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -37) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -38) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -39) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -40) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -41) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) 42 (t 25772 52539 249662 525000)) nil (25772 52555 129124 253000) 0 nil])
([nil nil ((324 . 328) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -324) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 325 (323 . 325)) nil (25772 52555 129072 670000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -606) (597 . 607) (#("a" 0 1 (fontified t)) . -597) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) 598 (585 . 598) (#("p" 0 1 (fontified t)) . -585) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) 586 (572 . 586) (570 . 572) (566 . 570) (565 . 567) (#("9" 0 1 (fontified t)) . -565) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) 566 (565 . 566) (564 . 565) (563 . 564) (t 25772 52555 134798 332000) 543) nil (25772 52809 642878 398000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -759) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (#(" " 0 1 (fontified t)) . -760) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (#(" " 0 1 (fontified t)) . -761) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (#(" " 0 1 (fontified t)) . -762) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (#(" " 0 1 (fontified nil)) . -763) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (#("	" 0 1 (fontified nil)) . 764) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (759 . 764) 760 (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -760) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) 761 (759 . 761) 757 (754 . 757) (#("\"" 0 1 (face font-lock-string-face fontified nil)) . -753) (752 . 754) (750 . 753) (741 . 751) (737 . 741) (#("o" 0 1 (fontified t)) . -737) (undo-tree-id227 . -1) 738 (725 . 738) (723 . 725) (709 . 723) (703 . 709) (701 . 703) (693 . 701) (673 . 693) (671 . 673) (666 . 671) (#("f" 0 1 (fontified t)) . -666) (undo-tree-id228 . -1) 667 (659 . 667) (645 . 659) (643 . 645) (641 . 643) (#("c" 0 1 (fontified t)) . -641) (undo-tree-id229 . -1) (#("e" 0 1 (fontified t)) . -642) (undo-tree-id230 . -1) 643 (641 . 643) (#("c" 0 1 (fontified t)) . -641) (undo-tree-id231 . -1) 642 (638 . 642) (#("e" 0 1 (fontified t)) . -638) (undo-tree-id232 . -1) (#("a" 0 1 (fontified t)) . -639) (undo-tree-id233 . -1) (#("c" 0 1 (fontified t)) . -640) (undo-tree-id234 . -1) 641 (636 . 641) (631 . 636) (610 . 631) (#("d" 0 1 (fontified t)) . -610) (undo-tree-id235 . -1) 611 (608 . 611) (#("b" 0 1 (fontified t)) . -608) (undo-tree-id236 . -1) (#("y" 0 1 (fontified t)) . -609) (undo-tree-id237 . -1) 610 (608 . 610) (606 . 608)) nil (25772 52809 642871 697000) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . -766) (766 . 767) (758 . 766) (756 . 759)) nil (25772 52809 642851 260000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -767) (undo-tree-id182 . 1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) 768) nil (25772 52809 642850 405000) 0 nil])
([nil nil ((769 . 770)) nil (25772 52809 642838 117000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . -874) (865 . 875) (#("o" 0 1 (fontified t)) . -865) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (#("c" 0 1 (fontified t)) . -866) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) 867 (866 . 867) (#("n" 0 1 (fontified t)) . -866) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) 867 (864 . 867) (#("s" 0 1 (fontified t)) . -864) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) 865 (857 . 865) (855 . 857) (852 . 855) (839 . 852) (#("y" 0 1 (fontified t)) . -839) (undo-tree-id263 . -1) 840 (836 . 840) (#("l" 0 1 (fontified t)) . -836) (undo-tree-id264 . -1) 837 (836 . 837) (834 . 836) (831 . 834) (823 . 831) (#("0" 0 1 (fontified t)) . -823) (undo-tree-id265 . -1) 824 (817 . 824) (#("t" 0 1 (fontified t)) . -817) (undo-tree-id266 . -1) (#("p" 0 1 (fontified t)) . -818) (undo-tree-id267 . -1) 819 (815 . 819) (813 . 815) (792 . 813) (790 . 792) (785 . 790) (#("n" 0 1 (fontified t)) . -785) (undo-tree-id268 . -1) (#("g" 0 1 (fontified t)) . -786) (undo-tree-id269 . -1) 787 (785 . 787) (#("t" 0 1 (fontified t)) . -785) (undo-tree-id270 . -1) (#("i" 0 1 (fontified t)) . -786) (undo-tree-id271 . -1) (#("n" 0 1 (fontified t)) . -787) (undo-tree-id272 . -1) 788 (771 . 788) (769 . 771) (t 25772 52809 645974 233000)) nil (25772 52882 249962 586000) 0 nil])
([nil nil (554) nil (25772 52890 256064 176000) 0 nil])
([nil nil ((536 . 538) (t 25772 52882 323595 582000)) nil (25772 52890 256063 807000) 0 nil])
([nil nil ((500 . 502) 501) nil (25772 52890 256063 482000) 0 nil])
([nil nil ((466 . 468) 467) nil (25772 52890 256063 101000) 0 nil])
([nil nil ((423 . 425) 424) nil (25772 52890 256062 419000) 0 nil])
([nil nil ((378 . 380) 379) nil (25772 52890 256061 622000) 0 nil])
([nil nil ((336 . 338) 337) nil (25772 52890 256057 663000) 0 nil])
([nil nil ((#("
;; more options
;;(setq electric-pair-preserve-balance nil)
;;(setq byte-compile-warnings '(cl-functions))
;;(setq display-line-numbers-type 'relative)
;;(setq ring-bell-function 'ignore)
;;(setq initial-scratch-message 'nil)
;;(setq create-lockfiles nil)

" 0 1 (fontified t) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 17 (fontified t face font-lock-comment-face) 17 19 (fontified t face font-lock-comment-delimiter-face) 19 61 (fontified t face font-lock-comment-face) 61 63 (fontified t face font-lock-comment-delimiter-face) 63 108 (fontified t face font-lock-comment-face) 108 110 (fontified t face font-lock-comment-delimiter-face) 110 153 (fontified t face font-lock-comment-face) 153 155 (fontified t face font-lock-comment-delimiter-face) 155 189 (fontified t face font-lock-comment-face) 189 191 (fontified t face font-lock-comment-delimiter-face) 191 227 (fontified t face font-lock-comment-face) 227 229 (fontified t face font-lock-comment-delimiter-face) 229 257 (fontified t face font-lock-comment-face) 257 258 (fontified t)) . 319) (undo-tree-id0 . -257) (undo-tree-id1 . -257) (undo-tree-id2 . -257) (undo-tree-id3 . -258) (undo-tree-id4 . -257) (undo-tree-id5 . -257) (undo-tree-id6 . -257) (undo-tree-id7 . -258) (undo-tree-id8 . -257) 576 (t 25772 52890 330664 38000)) nil (25772 55676 178723 801000) 0 nil])
([nil current ((318 . 319) 275) nil (25772 55676 178703 212000) 0 nil])
nil
