vim9script

# BEGIN VIM-PLUG BOOTSTRAP
# Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

# Run PlugInstall if there are missing plugins
autocmd VimEnter * if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \| PlugInstall --sync | source $MYVIMRC
\| endif

# END VIM-PLUG

# BEGIN GENERAL OPTIONS
if !has('gui_running')
  set t_Co=256
endif

set nocompatible

g:mapleader = " "

syntax on

set backspace=indent,eol,start
set tabstop=4
set shiftwidth=4
set expandtab
set scrolloff=5
set laststatus=2
set number
set relativenumber
set hlsearch
set incsearch

set showcmd
set showmatch
set ignorecase
set hidden
set nohls
set splitright
set splitbelow
set termguicolors
set numberwidth=4
set autoindent

g:guifont = "Iosevka Nerd Font:h14"
set sidescrolloff=8
set clipboard="unnamedplus"
set cmdheight=1
set timeoutlen=1000
set updatetime=100
set nowritebackup
set fileencoding="utf-8"
set pumheight=10
set cmdheight=1

g:cindent = true
set conceallevel=0
set noshowmode
set signcolumn=yes
set nowritebackup
set shiftround
## END GENERAL OPTIONS

# BEGIN KEYMAPS
# Normal mode keymaps
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <S-l> <cmd>:bnext<cr>
nnoremap <S-h> <cmd>:bprevious<cr>
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

# Insert mode keymaps
inoremap jk <Esc>

# Visual mode keymaps
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
# END KEYMAPS

# BEGIN PLUGINS
call plug#begin()
	Plug 'catppuccin/vim', { 'as': 'catppuccin' } # Catppuccin Theme
	Plug 'tpope/vim-surround' # Vim Surround, which I use for everything
#	Plug 'preservim/nerdtree'
    Plug 'vim-airline/vim-airline' # Simple statusline for Vim
    Plug 'jiangmiao/auto-pairs' #  For pairing brackets and quotes
    Plug 'mbbill/undotree'
    Plug 'christoomey/vim-tmux-navigator'
call plug#end()

# END PLUGINS

# BEGIN NETRW CONFIGURATION

g:netrw_banner = 0
g:netrw_altv = 1
g:netrw_liststyle = 3

# END NETRW CONFIGURATION
colorscheme catppuccin_mocha
g:airline_theme = 'catppuccin_mocha'
# g:coc_node_path = '/home/emaget_/.nvm/versions/node/v19.8.1/bin/node'
# autocmd Filetype help wincmd L # behavior is still the same...

# CocKeymaps
# inoremap <silent><expr> <TAB>
      # \ coc#pum#visible() ? coc#pum#next(1) :
      # \ CheckBackspace() ? #"\<Tab>" :
      # \ coc#refresh()
# inoremap <expr><S-TAB> coc#pum#visible() ? coc#pum#prev(1) : #"\<C-h>"

# inoremap <silent><expr> <CR> coc#pum#visible() ? coc#pum#confirm()
                              # \: #"\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"

# if has('nvim')
  # inoremap <silent><expr> <c-space> coc#refresh()
# else
  # inoremap <silent><expr> <c-@> coc#refresh()
# endif

# nmap <silent> [g <Plug>(coc-diagnostic-prev)
# nmap <silent> ]g <Plug>(coc-diagnostic-next)

# nmap <silent> gd <Plug>(coc-definition)
# nmap <silent> gy <Plug>(coc-type-definition)
# nmap <silent> gi <Plug>(coc-implementation)
# nmap <silent> gr <Plug>(coc-references)

# function ShowDocumentation()
  # if CocAction('hasProvider', 'hover')
    # call CocActionAsync('doHover')
  # else
    # call feedkeys('K', 'in')
  # endif
# endfunction

# nmap <leader>rn <Plug>(coc-rename)

nnoremap <leader>f <cmd>:Ex<cr>
# g:NERDTreeWinPos = right remember to replace quotes around value
